#include "keccak.hpp"

void keccak(uint64_t st[25]) {
	const uint64_t round_cns[24] = {
			0x0000000000000001, 0x0000000000008082, 0x800000000000808a,
			0x8000000080008000, 0x000000000000808b, 0x0000000080000001,
			0x8000000080008081, 0x8000000000008009, 0x000000000000008a,
			0x0000000000000088, 0x0000000080008009, 0x000000008000000a,
			0x000000008000808b, 0x800000000000008b, 0x8000000000008089,
			0x8000000000008003, 0x8000000000008002, 0x8000000000000080,
			0x000000000000800a, 0x800000008000000a, 0x8000000080008081,
			0x8000000000008080, 0x0000000080000001, 0x8000000080008008
	};
	const int rotation_cns[24] = {
			1, 3, 6, 10, 15, 21, 28, 36, 45, 55, 2, 14,
			27, 41, 56, 8, 25, 43, 62, 18, 39, 61, 20, 44
	};
	const int piln_cns[24] = {
			10, 7, 11, 17, 18, 3, 5, 16, 8, 21, 24, 4,
			15, 23, 19, 13, 12, 2, 20, 14, 22, 9, 6, 1
	};

	uint64_t tmp, bc[5];

	for (int r = 0; r < KECCAK_ROUNDS; r++) {

		for (int i = 0; i < 5; i++)
			bc[i] = st[i] ^ st[i + 5] ^ st[i + 10] ^ st[i + 15] ^ st[i + 20];

		for (int i = 0; i < 5; i++) {
			tmp = bc[(i + 4) % 5] ^ ROTL(bc[(i + 1) % 5], 1);
			for (int j = 0; j < 25; j += 5)
				st[j + i] ^= tmp;
		}

		tmp = st[1];
		for (int i = 0; i < 24; i++) {
			int j = piln_cns[i];
			bc[0] = st[j];
			st[j] = ROTL(tmp, rotation_cns[i]);
			tmp = bc[0];
		}

		for (int j = 0; j < 25; j += 5) {
			for (int i = 0; i < 5; i++)
				bc[i] = st[j + i];
			for (int i = 0; i < 5; i++)
				st[j + i] ^= (~bc[(i + 1) % 5]) & bc[(i + 2) % 5];
		}

		st[0] ^= round_cns[r];
	}
}
